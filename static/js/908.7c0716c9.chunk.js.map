{"version":3,"file":"static/js/908.7c0716c9.chunk.js","mappings":"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","sources":["components/FilterBox/FilterBox.jsx","components/AllProducts/Allproducts.jsx","components/CreateProductModal/CreateProductModal.jsx","pages/Products/Products.jsx","components/AllSuppliers/AllSuppliers.jsx","components/CreateSuppliersModal/CreateSuppliersModal.jsx","pages/Suppliers/Suppliers.jsx"],"sourcesContent":["import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport styled from 'styled-components';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport InputField from 'components/InputField/InputField';\n\nconst Box = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 8px;\n  margin-bottom: 14px;\n  @media (min-width: 768px) {\n    width: 354px;\n  }\n`;\n\nconst InputBox = styled.div``;\n\nconst ButtonBox = styled.div`\n  width: 100%;\n`;\n\nconst StyledSvg = styled.svg`\n  stroke: var(--main-black);\n  stroke-width: 1;\n`;\n\nconst FilterBox = ({ onSubmit }) => {\n    const { handleSubmit } = useFormContext();\n\n    const handleFormSubmit = (data) => {\n        onSubmit(data);\n    };\n\n    return (\n\n        <form onSubmit={handleSubmit(handleFormSubmit)}>\n            <Box>\n                <InputBox>\n                    <InputField placeholder=\"User Name\" type=\"text\" name=\"Name\" />\n                </InputBox>\n                <ButtonBox>\n                    <CustomButton type=\"submit\">\n                        <StyledSvg width={14} height={14}>\n                            <use href={`${sprite}#icon-filter`} />\n                        </StyledSvg>\n                        Filter\n                    </CustomButton>\n                </ButtonBox> </Box>\n        </form>\n\n    );\n};\n\nexport default FilterBox;\n","import DynamicTable from 'components/DynamicTable/DynamicTable'\nimport { Container } from 'components/RecentCustomers/RecentCustomers';\nimport React from 'react';\n\nconst AllProducts = ({ props }) => {\n\n    const columns = [\"Product Info\", \"Category\", \"Stock\", \"Suppliers\", \"Price\", \"Action\"];\n    return (\n        <Container>\n\n            <DynamicTable columns={columns} data={props} title={\"All Orders\"} />\n        </Container>\n    )\n}\nexport default AllProducts;","import React from 'react';\nimport Title from 'components/Title/Title';\nimport ProductForm from 'components/ProductForm/ProductForm';\n\n\nconst CreateProductModal = ({ onClose }) => {\n\n    return (\n        <div>\n            <Title>Add a new product</Title>\n            <ProductForm onClose={onClose} />\n        </div>\n    );\n};\n\nexport default CreateProductModal;\n","\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from 'store/operations';\nimport { selectGetProducts } from 'store/selectors';\nimport styled from 'styled-components';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport { FormProvider, useForm } from 'react-hook-form';\nimport AllProducts from 'components/AllProducts/Allproducts';\nimport Modal from 'components/Modal/Modal';\nimport CreateProductModal from 'components/CreateProductModal/CreateProductModal';\nimport toast from 'react-hot-toast';\nimport FilterBox from 'components/FilterBox/FilterBox';\n\nconst Container = styled.div`\n    padding-top: 40px;\n      width: 100%;\n        @media(min-width: 1440px) {\n  padding-top: 75px;\n      \n padding-left: 40px }\n`;\nconst Box = styled.div`\n   display: flex;\n  align-items: center;\n   gap: 8px;\n  margin-bottom: 20px;\n  @media (min-width: 768px){\n       margin-bottom: 0;}\n`;\nexport const ButtonsContainer = styled.div`\n@media (min-width: 768px){\n display: flex;\njustify-content: space-between\n}\n\n`;\nconst Text = styled.p`\n margin:0;\n font-size: 14px;\nfont-weight: 500;\n     \n`;\nconst ButtonBox = styled.div`\n width: 44px;\n height: 44px;\n   \n`;\nconst StyledSvg = styled.svg`\n \n     \n`;\n\nconst Products = () => {\n    const [modalOpen, setModalOpen] = useState(false)\n    const dispatch = useDispatch();\n    const products = useSelector(selectGetProducts);\n    const [noResults, setNoResults] = useState(false);\n    const methods = useForm();\n\n    useEffect(() => {\n        dispatch(getProducts({}));\n    }, [dispatch]);\n\n    const onSubmitFilter = async (data) => {\n        try {\n            const products = await dispatch(getProducts({ query: data.Name || '' }));\n\n            if (products.payload.length === 0) {\n                toast.error('No results found');\n                setNoResults(true);\n            } else {\n                setNoResults(false);\n            }\n        } catch (error) {\n            console.error('Error fetching :', error);\n            toast.error('Failed to fetch ');\n        }\n    };\n\n    const openModal = () => {\n        setModalOpen(true);\n\n    }\n    return (\n        <Container>\n            <ButtonsContainer>\n                <FormProvider {...methods}>\n                    <FilterBox onSubmit={onSubmitFilter} />\n                </FormProvider>\n                <Box>\n                    <ButtonBox>\n                        <CustomButton type=\"submit\" onClick={openModal}>\n                            <StyledSvg width={16} height={16} style={{ stroke: \"var(--white)\", strokeWidth: 1 }}>\n                                <use href={`${sprite}#icon-plus`}></use>\n                            </StyledSvg>\n                        </CustomButton>\n\n                    </ButtonBox>\n                    <Text>Add a new product</Text></Box></ButtonsContainer>\n            {noResults ? null : <AllProducts props={products} />}\n            <Modal isOpen={modalOpen} onClose={() => setModalOpen(false)}>\n                <CreateProductModal onClose={() => setModalOpen(false)} />\n\n\n            </Modal>\n        </Container>\n\n    );\n};\n\nexport default Products;","import DynamicTable from 'components/DynamicTable/DynamicTable'\nimport { Container } from 'components/RecentCustomers/RecentCustomers';\nimport React from 'react'\n\nconst AllSuppliers = ({ props }) => {\n\n    const columns = [\"Suppliers Info\", \"Address\", \"Company\", \"Delivery date\", \"Amount\", \"Status\", \"Action\"];\n\n    return (\n        <Container>\n\n            <DynamicTable columns={columns} data={props} title={\"All Suppliers\"} />\n        </Container>\n    )\n}\nexport default AllSuppliers;","import SuppliersForm from 'components/SuppliersForm/SuppliersForm';\nimport Title from 'components/Title/Title';\nimport React from 'react';\n\n\n\nconst CreateSuppliersModal = ({ onClose }) => {\n\n    return (\n        <div>\n            <Title>Add a new suppliers</Title>\n            <SuppliersForm onClose={onClose} />\n        </div>\n    );\n};\n\nexport default CreateSuppliersModal;","\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSuppliers } from 'store/operations';\nimport { selectGetSuppliers } from 'store/selectors';\nimport styled from 'styled-components';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport AllSuppliers from 'components/AllSuppliers/AllSuppliers';\nimport Modal from 'components/Modal/Modal';\nimport CreateSuppliersModal from 'components/CreateSuppliersModal/CreateSuppliersModal';\nimport FilterBox from 'components/FilterBox/FilterBox';\nimport toast from 'react-hot-toast';\nimport { ButtonsContainer } from 'pages/Products/Products';\n\nconst Container = styled.div`\n    padding-top: 40px;\n      width: 100%;\n        @media(min-width: 1440px) {\n  padding-top: 75px;\n      \n padding-left: 40px }\n`;\n\n\nconst ButtonBox = styled.div`\n width: 177px;\n     \n`;\n\nconst Button = styled.div`\nwidth: 177px;\nheight: 44px;\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 500;\nborder-radius: 30px;\ntext-align: center;\npadding: 13px 30px;\nborder: 1px solid rgba(89, 177, 122, 0.50);\nmargin-bottom: 20px;\n&:hover{\n    background: rgba(63, 148, 95, 1);\n}\n@media (min-width: 768px) {\n    margin-bottom: 0;}\n`;\nconst Suppliers = () => {\n    const [modalOpen, setModalOpen] = useState(false)\n    const dispatch = useDispatch();\n    const suppliers = useSelector(selectGetSuppliers);\n    const [noResults, setNoResults] = useState(false);\n    const methods = useForm();\n\n    useEffect(() => {\n        dispatch(getSuppliers({}));\n    }, [dispatch]);\n\n    const onSubmitFilter = async (data) => {\n        try {\n            const suppliers = await dispatch(getSuppliers({ query: data.Name || '' }));\n\n            if (suppliers.payload.length === 0) {\n                toast.error('No results found');\n                setNoResults(true);\n            } else {\n                setNoResults(false);\n            }\n        } catch (error) {\n            console.error('Error fetching suppliers:', error);\n            toast.error('Failed to fetch suppliers');\n        }\n    };\n\n    const openModal = () => {\n        setModalOpen(true);\n\n    }\n    return (\n        <Container>\n            <ButtonsContainer>\n\n                <FormProvider {...methods}>\n                    <FilterBox onSubmit={onSubmitFilter} />\n                </FormProvider>\n\n                <ButtonBox>\n                    <Button type=\"button\" onClick={openModal}> Add a new suppliers</Button>\n                </ButtonBox></ButtonsContainer>\n            {noResults ? null : <AllSuppliers props={suppliers} />}\n            <Modal isOpen={modalOpen} onClose={() => setModalOpen(false)}>\n                <CreateSuppliersModal onClose={() => setModalOpen(false)} />\n\n\n            </Modal>\n        </Container>\n    );\n};\n\nexport default Suppliers;"],"names":["Box","styled","div","_templateObject","_taggedTemplateLiteral","InputBox","_templateObject2","ButtonBox","_templateObject3","StyledSvg","svg","_templateObject4","_ref","onSubmit","handleSubmit","useFormContext","_jsx","data","children","_jsxs","InputField","placeholder","type","name","CustomButton","width","height","href","concat","sprite","props","Container","DynamicTable","columns","title","onClose","Title","ProductForm","ButtonsContainer","Text","p","_templateObject5","_templateObject6","Products","modalOpen","setModalOpen","useState","dispatch","useDispatch","products","useSelector","selectGetProducts","noResults","setNoResults","methods","useForm","useEffect","getProducts","FormProvider","FilterBox","async","query","Name","payload","length","toast","error","console","onClick","openModal","style","stroke","strokeWidth","AllProducts","Modal","isOpen","CreateProductModal","SuppliersForm","Button","Suppliers","suppliers","selectGetSuppliers","getSuppliers","AllSuppliers","CreateSuppliersModal"],"sourceRoot":""}