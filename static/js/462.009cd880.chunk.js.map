{"version":3,"file":"static/js/462.009cd880.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.jsx","components/EditProductModal/EditProductModal.jsx","components/EditSuppliersModal/EditSuppliersModal.jsx","components/ActionButtons/ActionButtons.jsx","helpers/getRowValue.js","components/DynamicTable/DynamicTable.jsx","components/Modal/Modal.jsx","components/OperationTablet/OperationTablet.jsx","components/ProductForm/ProductForm.jsx","components/RecentCustomers/RecentCustomers.jsx","components/SelectField/SelectField.jsx","components/DeliveryPicker/DeliveryPiccker.jsx","components/SuppliersForm/SuppliersForm.jsx","components/Title/Title.jsx","helpers/colorType.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst PaginationBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0 0 0;\n`;\n\nconst PageButton = styled.button`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${({ $active }) => ($active ? '#59b17a' : '#ccc')};\n  border: none;\n  margin: 0 5px;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: ${({ $active }) => ($active ? '#59b17a' : '#aaa')};\n  }\n`;\nconst Pagination = ({ totalPages, currentPage, handlePageClick }) => {\n  if (totalPages <= 1) {\n\n    return null;\n  }\n\n\n  return (\n    <PaginationBox className=\"pagination\">\n      {[...Array(totalPages)].map((_, index) => (\n        <PageButton\n          key={index}\n          $active={index + 1 === currentPage}\n          onClick={() => handlePageClick(index + 1)}\n        />\n      ))}\n    </PaginationBox>\n  );\n};\n\nexport default Pagination;","\nimport ProductForm from 'components/ProductForm/ProductForm';\nimport Title from 'components/Title/Title';\nimport React from 'react'\n\nexport const EditProductModal = ({ props, onClose }) => {\n    return (\n        <div>\n            <Title>Edit data</Title>\n            <ProductForm onClose={onClose} product={props} />\n        </div>\n    )\n}\nexport default EditProductModal;","\nimport SuppliersForm from 'components/SuppliersForm/SuppliersForm';\nimport Title from 'components/Title/Title';\nimport React from 'react'\n\nexport const EditSuppliersModal = ({ props, onClose }) => {\n\n    return (\n        <div>\n            <Title>Edit data</Title>\n            <SuppliersForm onClose={onClose} supplier={props} />\n        </div>\n    )\n}\nexport default EditSuppliersModal;","import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport { useDispatch } from 'react-redux';\nimport { productDelete } from 'store/operations';\nimport Modal from 'components/Modal/Modal';\n\nimport EditProductModal from 'components/EditProductModal/EditProductModal';\nimport { useLocation } from 'react-router-dom';\nimport EditSuppliersModal from 'components/EditSuppliersModal/EditSuppliersModal';\n\nconst Box = styled.div`\ndisplay: flex;\ngap: 8px;\n`;\nconst ButtonEdit = styled.div`\nwidth: 32px;\nheight: 32px;\nborder-radius: 100%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ncolor: rgba(89, 177, 122, 0.50);\nborder: 1px solid rgba(89, 177, 122, 0.50);\n&:hover{\n    scale: 1.08;}\n`;\nconst Button = styled.div`\nwidth: 82px;\nheight: 32px;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 500;\nborder-radius: 30px;\ndisplay: flex;\ngap: 6px;\njustify-content: center;\nalign-items: center;\ncolor: rgba(89, 177, 122, 0.50);\nborder: 1px solid rgba(89, 177, 122, 0.50);\n&:hover{\n    scale: 1.08;}\n`;\nconst ButtonDelete = styled.div`\nwidth: 32px;\nheight: 32px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder-radius: 100%;\nborder: 1px solid rgba(232, 80, 80, 0.50);\n&:hover{\n    scale: 1.08;}\n`;\nconst StyledSvg = styled.svg`\n\n`;\n\nconst ActionButtons = ({ props }) => {\n\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalOpen2, setModalOpen2] = useState(false);\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const handleClick = () => {\n        setModalOpen(true);\n    };\n    const handleOpen = () => {\n        setModalOpen2(true);\n    };\n    const deleteProduct = () => {\n        dispatch(productDelete(props._id));\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const closeModal2 = () => {\n        setModalOpen2(false);\n    };\n    const isSuppliersPage = location.pathname === \"/suppliers\"\n    return (\n        <> {isSuppliersPage ? (<Button onClick={handleOpen}>\n            <StyledSvg width={16} height={16} style={{ stroke: \"var(--green)\", strokeWidth: 1 }}>\n                <use href={`${sprite}#icon-edit`}></use>\n\n            </StyledSvg>  Edit\n        </Button>) :\n            <Box>\n                <ButtonEdit onClick={handleClick}>\n                    <StyledSvg width={16} height={16} style={{ stroke: \"var(--green)\", strokeWidth: 1 }}>\n                        <use href={`${sprite}#icon-edit`}></use>\n                    </StyledSvg>\n                </ButtonEdit>\n                <ButtonDelete onClick={deleteProduct}>\n                    <StyledSvg width={16} height={16} style={{ stroke: \"var(--red)\", strokeWidth: 1 }}>\n                        <use href={`${sprite}#icon-trash`}></use>\n                    </StyledSvg>\n                </ButtonDelete>\n            </Box>}\n            <Modal isOpen={modalOpen} onClose={closeModal}>\n                <EditProductModal onClose={closeModal} props={props} />\n            </Modal>\n            <Modal isOpen={modalOpen2} onClose={closeModal2}>\n                <EditSuppliersModal onClose={closeModal2} props={props} />\n            </Modal>\n        </>\n    );\n};\n\nexport default ActionButtons;\n","import { BoxName, Name } from \"components/DynamicTable/DynamicTable\";\nimport { getBgColorByStatus, getColorByStatus } from \"./colorType\";\nimport { Text } from \"components/OperationTablet/OperationTablet\";\nimport ActionButtons from \"components/ActionButtons/ActionButtons\";\n\nexport const getRowValue = (row, column) => {\n  switch (column) {\n    case \"User Info\":\n      return (\n        <BoxName>\n          <img\n            className=\"avatar\"\n            src={row.image || row.photo}\n            alt=\"Avatar\"\n            width={36}\n            height={36}\n          />\n          <Name>{row.name}</Name>\n        </BoxName>\n      );\n    case \"Name\":\n      return (\n        <BoxName>\n          <img\n            className=\"avatar\"\n            src={row.image || row.photo}\n            alt=\"Avatar\"\n            width={36}\n            height={36}\n          />\n          <Name>{row.name}</Name>\n        </BoxName>\n      );\n    case \"Address\":\n      return row.address;\n    case \"Products\":\n      return row.products;\n    case \"Order date\":\n      return row.order_date;\n    case \"Register date\":\n      return row.register_date;\n    case \"Delivery date\":\n      return row.date;\n    case \"Price\":\n      return row.price;\n    case \"Company\":\n      return row.suppliers;\n    case \"Product Info\":\n      return row.name;\n    case \"Suppliers Info\":\n      return row.name;\n    case \"Status\":\n      return (\n        <Text\n          color={getColorByStatus(row.status)}\n          $bgcolor={getBgColorByStatus(row.status)}\n        >\n          {row.status}\n        </Text>\n      );\n    case \"Action\":\n      return <ActionButtons props={row} />;\n    default:\n      return row[column.toLowerCase()];\n  }\n};\n","import Pagination from 'components/Pagination/Pagination';\nimport { getRowValue } from 'helpers/getRowValue';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const TableContainer = styled.div`\n\n`;\n\nexport const TableTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n  display: block;\n  border-radius: 8px 8px 0 0;\n  position: sticky;\n  top: 0;\n  padding: 14px;\n  width: 100%;\n  background: #E7F1ED;\n  @media (min-width: 768px) {\n    font-size: 18px;\n  } \n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Table = styled.table`\n  min-width: 280px;\n  width: 100%;\n  border-collapse: collapse;\n\n  th, td {\n    border: 1px solid #ddd;\n    padding: 14px 10px;\n    text-align: left;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 14px;\n    border-top: none; \n    border-left: none;\n    @media (min-width: 768px) {\n      padding: 20px;\n      font-size: 16px;\n    }\n    @media (min-width: 1440px) {\n    }\n  }\n\n  tr:last-child td {\n    border-bottom: none;\n  }\n  tr:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n  th {\n    border-top: none;\n    color: rgba(29, 30, 33, 0.40);\n  }\n\n  th:last-child {\n    border-right: none;\n  }\n\n  td:last-child {\n    border-right: none;\n  }\n\n  td:first-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nexport const Box = styled.div`\n  height: 100%;\n  padding-bottom: 20px;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    padding-bottom: 15px;\n    height: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #f1f1f1; \n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 14px;\n    background: #E6E6E6;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: #555; \n  }\n`;\n\nexport const BoxName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  gap: 8px;\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const Name = styled.h3`\n  margin: 0;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  border-radius: 0 0 8px 8px;\n  border: 1px solid rgba(29, 30, 33, 0.10);\n  background: #FFF;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst DynamicTable = ({ columns, data, title }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  const handlePageClick = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <Box>\n      <TableTitle>{title}</TableTitle>\n      <Container>\n        <Table>\n          <thead>\n            <tr>\n              {columns.map((column, index) => (\n                <th key={index}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {currentItems.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {columns.map((column, colIndex) => (\n                  <td key={colIndex}>\n                    {getRowValue(row, column)}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Container>\n      <Pagination totalPages={totalPages} handlePageClick={handlePageClick} currentPage={currentPage} />\n    </Box>\n  );\n};\n\nexport default DynamicTable;\n","import React, { useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport ReactDOM from 'react-dom';\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color:rgba(29, 30, 33, 0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContainer = styled.div`\nposition: relative;\n  background-color: white;\n  padding:  20px 20px;\n  border-radius: 8px;\n \n  width: 335px;\n  width: 295px;\n    @media(min-width: 375px){\n        padding:  40px 20px; \n    }\n     @media(min-width: 768px) {\n   width: 536px;\n     padding:  40px; \n}\n`;\n\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  top:0;\n  padding: 14px;\n`;\n\nconst ModalContent = styled.div`\n  \n`;\n\nconst Modal = ({ isOpen, onClose, children }) => {\n    const handleCloseModal = useCallback(() => {\n        onClose(false);\n    }, [onClose]);\n\n    const handleBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n            handleCloseModal();\n        }\n    };\n\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                handleCloseModal();\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleCloseModal]);\n    return isOpen ? ReactDOM.createPortal(\n        <ModalBackground onClick={handleBackdropClick}>\n            <ModalContainer>\n                <CloseButton onClick={handleCloseModal}> <svg width={24} height={24} style={{ stroke: \"var(--main-black)\", strokeWidth: 1 }}>\n                    <use href={`${sprite}#icon-x`}></use>\n                </svg></CloseButton>\n\n                <ModalContent>\n                    {children}\n                </ModalContent>\n            </ModalContainer>\n        </ModalBackground >, document.getElementById('modal-root')\n    ) : null;\n};\n\nexport default Modal;\n","import { Table } from 'components/DynamicTable/DynamicTable';\nimport { getBgColorByType, getColorByType } from 'helpers/colorType';\nimport React from 'react'\nimport styled from 'styled-components';\n\n\nexport const Text = styled.div`\n  \n     color: ${props => props.color};\n     padding: 4px;\n     max-width: 80px;\n    background-color:  ${$props => $props.bgcolor};\n    border-radius: 40px;\n    text-align: center;\n      ${props => props.$isError && `\n            text-decoration: line-through;\n        `}\n    `;\nexport const Title = styled.h3`\n font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n display: block;\n\n   border-radius: 8px 8px 0 0;\n position: sticky;\n  top: 0;\n  padding: 14px;\n  width: 100%;\n  background: #E7F1ED;`;\nconst Container = styled.div`\n\n border-radius: 0 0 8px 8px;\n border: 1px solid rgba(29, 30, 33, 0.10);\n  background: #FFF;\n\n`;\n\nconst OperationTablet = ({ columns, data, title }) => {\n\n    return (\n        <>\n\n            <Title>{title}</Title>\n            <Container>\n                <Table>\n\n                    <thead>\n                        <tr>\n                            {columns.map((column, index) => (\n                                <th style={{ borderLeft: \"none\", borderRight: \"none\" }} key={index}>{column}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((row, rowIndex) => (\n                            <tr key={rowIndex}>\n                                <td style={{ borderLeft: \"none\", borderRight: \"none\" }}><Text color={getColorByType(row.type)} $bgcolor={getBgColorByType(row.type)}>{row.type}</Text></td>\n                                <td style={{ borderLeft: \"none\", borderRight: \"none\" }}>{row.name}</td>\n                                <td style={{ borderLeft: \"none\", borderRight: \"none\" }}><Text color={getColorByType(row.type)} $isError={row.type === 'Error'}>{row.amount}</Text></td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table></Container >\n        </>\n    );\n};\n\n\n\nexport default OperationTablet;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport styled from 'styled-components';\nimport { addProduct, editProduct } from 'store/operations';\nimport InputField from 'components/InputField/InputField';\nimport SelectField from 'components/SelectField/SelectField';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { productAddSchema, productEditSchema } from 'schema/schema.js';\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n   @media (min-width: 768px){\n     margin-top: 36px;}\n`;\n\nconst Box = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 40px;\n  @media (min-width: 768px){\n    width: 274px;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n   gap: 14px;\n\n`;\nexport const EmptyBox = styled.div`\ndisplay: none;\n@media (min-width: 768px){\n    display: block;\n    width: 100%;}\n`;\nexport const RowBox = styled.div`\n  display: flex;\n  flex-direction: column;\n gap: 14px;\n\n @media (min-width: 768px){\n    flex-direction: row;\n    gap: 8px;\n    \n }\n\n`;\nconst ProductForm = ({ onClose, product }) => {\n    const dispatch = useDispatch();\n    const methods = useForm({\n        resolver: yupResolver(product ? productEditSchema : productAddSchema),\n        defaultValues: product || {},\n    });\n    const { handleSubmit, reset, setValue } = methods;\n\n    useEffect(() => {\n        if (product) {\n            for (const [key, value] of Object.entries(product)) {\n                setValue(key, value);\n            }\n        }\n    }, [product, setValue]);\n\n    const handleAddOrUpdateProduct = async (productData) => {\n\n        const dataToSend = {\n            ...productData,\n            stock: productData.stock.toString(),\n            price: productData.price.toString(),\n        };\n\n        if (product) {\n            const { _id, id, ...dataWithoutId } = dataToSend;\n\n            await dispatch(editProduct({ dataWithoutId, _id }));\n\n        } else {\n\n            await dispatch(addProduct(dataToSend));\n        }\n        onClose(false);\n        reset();\n    };\n\n    const handleCancel = () => {\n        onClose();\n    };\n\n    const categoryOptions = [\n        { value: 'Medicine', label: 'Medicine' },\n        { value: 'Head', label: 'Head' },\n        { value: 'Heart', label: 'Heart' },\n        { value: 'Hand', label: 'Hand' },\n        { value: 'Dental Care', label: 'Dental Care' },\n        { value: 'Skin Care', label: 'Skin Care' },\n        { value: 'Eye Care', label: 'Eye Care' },\n        { value: 'Vitamins & Supplements', label: 'Vitamins & Supplements' },\n        { value: 'Orthopedic Products', label: 'Orthopedic Products' },\n        { value: 'Baby Care', label: 'Baby Care' },\n        { value: 'Leg', label: 'Leg' },\n    ];\n\n    return (\n        <FormProvider {...methods}>\n            <FormContainer onSubmit={handleSubmit(handleAddOrUpdateProduct)}>\n                <Container>\n                    <RowBox>\n                        <InputField style={{ width: \"50%\" }} name=\"name\" type=\"text\" placeholder=\"Product Info\" />\n                        <SelectField name=\"category\" options={categoryOptions} /></RowBox>\n                    <RowBox>\n                        <InputField name=\"stock\" type=\"number\" placeholder=\"Stock\" />\n                        <InputField name=\"suppliers\" type=\"text\" placeholder=\"Suppliers\" /></RowBox>\n                    <RowBox>\n                        <InputField name=\"price\" type=\"text\" placeholder=\"Price\" />\n                        <EmptyBox></EmptyBox>\n                    </RowBox>\n                    <Box>\n                        <CustomButton type=\"submit\">{product ? 'Save' : 'Add'}</CustomButton>\n                        <CustomButton type=\"button\" $cancel=\"true\" onClick={handleCancel}>\n                            Cancel\n                        </CustomButton>\n                    </Box></Container>\n            </FormContainer>\n        </FormProvider>\n    );\n};\n\nexport default ProductForm;\n","import DynamicTable from 'components/DynamicTable/DynamicTable'\nimport React from 'react'\nimport styled from 'styled-components';\n\n\nexport const Container = styled.div`\nwidth: 100%;\n\npadding-bottom: 20px;\n @media (min-width: 768px) {\n\npadding-bottom: 0;\n }\n \n\n`;\nconst RecentCustomers = ({ props }) => {\n\n\n    const filteredData = props.map(({ image, name, email, spent }) => ({ image, name, email, spent }));\n    const columns = [\"Name\", \"Email\", \"Spent\"];\n    return (\n        <Container>\n\n            <DynamicTable columns={columns} data={filteredData} title={\"Recent Customers\"} />\n        </Container>\n    )\n}\nexport default RecentCustomers;","import React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport styled from 'styled-components';\n\nconst customStyles = {\n    control: (provided) => ({\n        ...provided,\n        backgroundColor: '#FFF',\n        boxShadow: 'none',\n        width: '100%',\n        borderRadius: \"60px\",\n        fontSize: \"12px\",\n        border: \"1px solid rgba(29, 30, 33, 0.10)\",\n        height: \"44px\",\n        color: \"black\",\n        outline: \"none\",\n        '&:hover': {\n            borderColor: '#aaa',\n        },\n    }),\n    valueContainer: (provided) => ({\n        ...provided,\n        paddingLeft: \"14px\",\n    }),\n    placeholder: (base) => ({\n        ...base,\n\n        color: 'rgba(0, 0, 0, 0.5)',\n    }),\n    input: (provided) => ({\n        ...provided,\n        paddingLeft: \"6px\",\n    }),\n    singleValue: (provided) => ({\n        ...provided,\n\n        color: \"var(--primary-color)\",\n        textTransform: 'capitalize',\n        fontSize: \"12px\",\n    }),\n    indicatorSeparator: (provided) => ({\n        ...provided,\n        display: 'none',\n    }),\n    dropdownIndicator: (provided) => ({\n        ...provided,\n        color: \"black\",\n        paddingRight: \"14px\",\n    }),\n    menu: (provided) => ({\n        ...provided,\n        borderRadius: \"15px\",\n    }),\n    menuList: (provided) => ({\n        ...provided,\n        borderRadius: \"15px\",\n        maxHeight: \"114px\",\n        backgroundColor: \"var(--green)\",\n        color: \"white\",\n        padding: \"13px 10px 13px 18px \",\n        \"::-webkit-scrollbar\": {\n            width: '8px',\n        },\n        \"::-webkit-scrollbar-thumb\": {\n            background: 'rgba(0,0,0,0.2)',\n            borderRadius: '10px',\n        },\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        padding: '3px 0',\n        color: state.isFocused ? 'white' : \"rgba(255, 255, 255, 0.50)\",\n        backgroundColor: state.isFocused ? 'transparent' : 'transparent',\n        fontSize: \"12px\",\n    }),\n};\n\nconst ErrorMessage = styled.p`\nposition: absolute;\n  height: 8px;\n  color: var(--red);\n  font-size: 10px;\n  margin: 2px 0 4px auto;\n  text-align: right;\n  right: 10px;\n  top: 5px;\n  z-index: 3;\n`;\n\nconst SelectField = ({ name, options }) => {\n    const { control, formState: { errors } } = useFormContext();\n\n    return (\n        <div style={{ position: \"relative\", width: \"100%\" }}>\n            <label htmlFor={name}></label>\n            {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\n            <Controller\n                name={name}\n                control={control}\n                render={({ field }) => (\n                    <Select\n                        {...field}\n                        options={options}\n                        styles={customStyles}\n                        placeholder=\"Category\"\n                        onChange={(selectedOption) => field.onChange(selectedOption.value)}\n                        value={options.find(option => option.value === field.value)}\n                    />\n                )}\n            />\n        </div>\n    );\n};\n\nexport default SelectField;","import React, { useRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { useFormContext } from 'react-hook-form';\nimport { format } from 'date-fns';\nimport { registerLocale } from 'react-datepicker';\nimport enGB from 'date-fns/locale/en-GB';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nregisterLocale('en-GB', enGB);\n\nconst CustomTextField = styled.input`\n  outline: none;\n  padding: 0 10px;\n  border-radius: 60px;\n  border: none;\n  background: #FFF;\n  width: 100%;\n  padding: 13px 18px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n`;\n\nconst CustomBox = styled.div`\n  position: relative;\n  border-radius: 60px;\n  width: 100%;\n  border: 1px solid rgba(29, 30, 33, 0.10);\n  height: 44px;\n  svg {\n    position: absolute;\n    right: 12px;\n    top: 12px;\n    width: 18px;\n    height: 18px;\n    fill: white;\n    stroke: black;\n    cursor: pointer;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  position: absolute;\n  height: 8px;\n  color: var(--red);\n  font-size: 10px;\n  margin: 2px 0 4px auto;\n  text-align: right;\n  right: 10px;\n  top: 5px;\n`;\n\nconst DeliveryPicker = ({ name, isNew }) => {\n    const datePickerRef = useRef(null);\n    const { setValue, register, formState: { errors }, watch } = useFormContext();\n\n    const handleIconClick = () => {\n        if (datePickerRef.current) {\n            datePickerRef.current.setOpen(true);\n        }\n    };\n\n    const handleDateChange = (date) => {\n        const formattedDate = format(date, 'MMMM d, yyyy');\n        setValue(name, formattedDate);\n    };\n\n    const selectedDate = watch(name);\n\n    return (\n        <CustomBox>\n            <DatePicker\n                selected={selectedDate ? new Date(selectedDate) : null}\n                onChange={handleDateChange}\n                customInput={\n                    <CustomTextField\n                        placeholder=\"Delivery date\"\n                        {...register(name)}\n                    />\n                }\n                locale=\"en-GB\"\n                placeholderText=\"Delivery date\"\n                minDate={isNew ? new Date() : null}\n                dateFormat=\"MMMM d, yyyy\"\n                ref={datePickerRef}\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n            />\n            <svg onClick={handleIconClick}>\n                <use href={`${sprite}#icon-calendar`} />\n            </svg>\n            {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\n        </CustomBox>\n    );\n};\n\nexport default DeliveryPicker;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport styled from 'styled-components';\nimport { addSuppliers, editSuppliers } from 'store/operations';\nimport InputField from 'components/InputField/InputField';\nimport SelectField from 'components/SelectField/SelectField';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { supplierAddSchema, supplierEditSchema } from 'schema/schema.js';\nimport DeliveryPicker from 'components/DeliveryPicker/DeliveryPiccker';\nimport { Container, RowBox } from 'components/ProductForm/ProductForm';\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 40px;\n  @media (min-width: 768px) {\n    width: 274px;\n  }\n`;\n\nconst SuppliersForm = ({ onClose, supplier, isNew }) => {\n    const dispatch = useDispatch();\n    const methods = useForm({\n        resolver: yupResolver(supplier ? supplierEditSchema : supplierAddSchema),\n        defaultValues: supplier || {},\n    });\n    const { handleSubmit, reset, } = methods;\n\n    useEffect(() => {\n        if (supplier) {\n            for (const [key, value] of Object.entries(supplier)) {\n                methods.setValue(key, value);\n            }\n        }\n    }, [supplier, methods]);\n\n    const handleAddOrUpdate = async (supplierData) => {\n\n        const dataToSend = {\n            ...supplierData,\n            amount: supplierData.amount.toString(),\n        };\n\n        if (supplier) {\n            const { _id, ...dataWithoutId } = dataToSend;\n\n            await dispatch(editSuppliers({ ...dataWithoutId, _id }));\n        } else {\n            await dispatch(addSuppliers(dataToSend));\n        }\n        onClose(false);\n        reset();\n    };\n\n    const handleCancel = () => {\n        onClose();\n    };\n\n    const categoryOptions = [\n        { value: 'Active', label: 'Active' },\n        { value: 'Deactive', label: 'Deactive' },\n    ];\n\n    return (\n        <FormProvider {...methods}>\n            <FormContainer onSubmit={handleSubmit(handleAddOrUpdate)}>\n                <Container>\n                    <RowBox>\n                        <InputField name=\"name\" type=\"text\" placeholder=\"Suppliers Info\" />\n                        <InputField name=\"address\" type=\"text\" placeholder=\"Address\" />\n                    </RowBox>\n                    <RowBox>\n                        <InputField name=\"suppliers\" type=\"text\" placeholder=\"Company\" />\n                        <DeliveryPicker name=\"date\" isNew={isNew} />\n                    </RowBox>\n                    <RowBox>\n                        <InputField name=\"amount\" type=\"text\" placeholder=\"Amount\" />\n                        <SelectField name=\"status\" options={categoryOptions} />\n                    </RowBox>\n                    <Box>\n                        <CustomButton type=\"submit\">{supplier ? 'Save' : 'Add'}</CustomButton>\n                        <CustomButton type=\"button\" $cancel=\"true\" onClick={handleCancel}>\n                            Cancel\n                        </CustomButton>\n                    </Box>\n                </Container>\n            </FormContainer>\n        </FormProvider>\n    );\n};\n\nexport default SuppliersForm;\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst StyledTitle = styled(\"h2\")`\nfont-size: 20px;\nfont-weight: 600;\nmargin-bottom: 4px;\n@media(min-width: 768px) {\n    font-size: 24px;\n}\n `\nconst Title = ({ children }) => {\n    return (\n        <StyledTitle>{children}</StyledTitle>\n    )\n}\nexport default Title;","export const getColorByType = (type) => {\n  switch (type) {\n    case \"Income\":\n      return \"var(--green)\";\n    case \"Expense\":\n      return \"var(--red)\";\n    case \"Error\":\n      return \"var(--main-black)\";\n    default:\n      return \"inherit\";\n  }\n};\nexport const getBgColorByType = (type) => {\n  switch (type) {\n    case \"Income\":\n      return \"rgba(89, 177, 122, 0.10)\";\n    case \"Expense\":\n      return \"rgba(232, 80, 80, 0.10)\";\n    case \"Error\":\n      return \"rgba(29, 30, 33, 0.10)\";\n    default:\n      return \"inherit\";\n  }\n};\nexport const getColorByStatus = (status) => {\n  switch (status) {\n    case \"Completed\":\n      return \"var(--green)\";\n    case \"Active\":\n      return \"var(--green)\";\n    case \"Cancelled\":\n      return \"var(--red)\";\n    case \"Deactive\":\n      return \"var(--red)\";\n    case \"Confirmed\":\n      return \" #8059E4\";\n    case \"Pending\":\n      return \" #F79042\";\n    case \"Processing\":\n      return \" #70A6E8\";\n    case \"Shipped\":\n      return \"#ffd600\";\n    case \"Delivered\":\n      return \"var(--main-black)\";\n    default:\n      return \"inherit\";\n  }\n};\nexport const getBgColorByStatus = (status) => {\n  switch (status) {\n    case \"Completed\":\n      return \"rgba(89, 177, 122, 0.10)\";\n    case \"Active\":\n      return \"rgba(89, 177, 122, 0.10)\";\n    case \"Cancelled\":\n      return \"rgba(232, 80, 80, 0.10)\";\n    case \"Deactive\":\n      return \"rgba(232, 80, 80, 0.10)\";\n    case \"Confirmed\":\n      return \"rgba(128, 89, 228, 0.10)\";\n    case \"Pending\":\n      return \"rgba(247, 144, 66, 0.10)\";\n    case \"Processing\":\n      return \"rgba(112, 166, 232, 0.10)\";\n    case \"Shipped\":\n      return \"rgba(255, 214, 0, 0.1)\";\n    case \"Delivered\":\n      return \"rgba(29, 30, 33, 0.10)\";\n    default:\n      return \"inherit\";\n  }\n};\n"],"names":["PaginationBox","styled","div","_templateObject","_taggedTemplateLiteral","PageButton","button","_templateObject2","_ref","$active","_ref2","_ref3","totalPages","currentPage","handlePageClick","_jsx","className","children","Array","map","_","index","onClick","props","onClose","_jsxs","Title","ProductForm","product","SuppliersForm","supplier","Box","ButtonEdit","Button","_templateObject3","ButtonDelete","_templateObject4","StyledSvg","svg","_templateObject5","modalOpen","setModalOpen","useState","modalOpen2","setModalOpen2","location","useLocation","dispatch","useDispatch","closeModal","closeModal2","isSuppliersPage","pathname","_Fragment","handleOpen","width","height","style","stroke","strokeWidth","href","concat","sprite","handleClick","deleteProduct","productDelete","_id","Modal","isOpen","EditProductModal","EditSuppliersModal","getRowValue","row","column","BoxName","src","image","photo","alt","Name","name","address","products","order_date","register_date","date","price","suppliers","Text","color","getColorByStatus","status","$bgcolor","getBgColorByStatus","ActionButtons","toLowerCase","TableTitle","h3","Table","table","_templateObject6","Container","_templateObject7","columns","data","title","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","Math","ceil","length","rowIndex","colIndex","Pagination","pageNumber","ModalBackground","ModalContainer","CloseButton","ModalContent","handleCloseModal","useCallback","useEffect","handleKeyDown","e","code","document","addEventListener","removeEventListener","ReactDOM","event","currentTarget","target","getElementById","$props","bgcolor","$isError","borderLeft","borderRight","getColorByType","type","getBgColorByType","amount","FormContainer","form","EmptyBox","RowBox","methods","useForm","resolver","yupResolver","productEditSchema","productAddSchema","defaultValues","handleSubmit","reset","setValue","key","value","Object","entries","FormProvider","onSubmit","async","dataToSend","productData","stock","toString","id","dataWithoutId","editProduct","addProduct","InputField","placeholder","SelectField","options","label","CustomButton","$cancel","handleCancel","filteredData","email","spent","DynamicTable","customStyles","control","provided","backgroundColor","boxShadow","borderRadius","fontSize","border","outline","borderColor","valueContainer","paddingLeft","base","input","singleValue","textTransform","indicatorSeparator","display","dropdownIndicator","paddingRight","menu","menuList","maxHeight","padding","background","option","state","isFocused","ErrorMessage","p","formState","errors","useFormContext","position","htmlFor","message","Controller","render","field","Select","styles","onChange","selectedOption","find","registerLocale","enGB","CustomTextField","CustomBox","isNew","datePickerRef","useRef","register","watch","selectedDate","DatePicker","selected","Date","formattedDate","format","customInput","locale","placeholderText","minDate","dateFormat","ref","showMonthDropdown","showYearDropdown","dropdownMode","handleIconClick","current","setOpen","supplierEditSchema","supplierAddSchema","supplierData","editSuppliers","addSuppliers","DeliveryPicker","StyledTitle"],"sourceRoot":""}