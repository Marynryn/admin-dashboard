{"version":3,"file":"static/js/462.d095a5ad.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.jsx","components/Pagination/Pagination.jsx","components/EditProductModal/EditProductModal.jsx","components/EditSuppliersModal/EditSuppliersModal.jsx","components/ActionButtons/ActionButtons.jsx","helpers/getRowValue.js","components/DynamicTable/DynamicTable.jsx","components/InputField/InputField.jsx","components/Modal/Modal.jsx","components/OperationTablet/OperationTablet.jsx","components/ProductForm/ProductForm.jsx","components/RecentCustomers/RecentCustomers.jsx","components/SelectField/SelectField.jsx","components/DeliveryPicker/DeliveryPiccker.jsx","components/SuppliersForm/SuppliersForm.jsx","helpers/colorType.js","schema/schema.js"],"sourcesContent":["\n\nimport React from 'react';\n\nimport styled from 'styled-components';\n\n\nconst StyledButton = styled('button')`\n  background-color: ${({ $cancel }) => ($cancel ? 'rgba(29, 30, 33, 0.1)' : 'var(--green)')};\n  border-radius: 60px;\n  border: none;\n  font-size: 12px;\n  display:  flex;\n  gap: 8px;\n  justify-content: center;\nalign-items: center;\n  color:${({ cancel }) => (cancel ? 'rgba(29, 30, 33, 0.4)' : '#fff')};;\n  height: 44px;\n  width: 100%;\n outline: none;\n  &:hover {\n    background-color: ${({ cancel }) => (cancel ? 'transparent' : 'rgba(63, 148, 95, 1)')};\nborder: ${({ cancel }) => (cancel ? ' 1px solid var(--green)' : 'none')};\nscale: 1.01;\ncolor: ${({ cancel }) => (cancel ? 'var(--green)' : '#fff')};\n  }\n  &:disabled {\n    background-color: rgba(29, 30, 33, 0.1);\n    color: rgba(29, 30, 33, 0.4);\n}\n@media(min-width: 768px) {\n    font-size: 14px;\n\n}\n`;\n\nconst CustomButton = ({ cancel, ...props }) => {\n  return <StyledButton $cancel={cancel} {...props} />;\n};\n\n\nexport default CustomButton;\n","import styled from \"styled-components\";\n\nconst PaginationBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0 0 0;\n`;\n\nconst PageButton = styled.button`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${({ active }) => (active ? '#59b17a' : '#ccc')};\n  border: none;\n  margin: 0 5px;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: ${({ active }) => (active ? '#59b17a' : '#aaa')};\n  }\n`;\nconst Pagination = ({ totalPages, currentPage, handlePageClick }) => {\n    if (totalPages <= 1) {\n\n        return null;\n    }\n\n\n    return (\n        <PaginationBox className=\"pagination\">\n            {[...Array(totalPages)].map((_, index) => (\n                <PageButton\n                    key={index}\n                    active={index + 1 === currentPage}\n                    onClick={() => handlePageClick(index + 1)}\n                />\n            ))}\n        </PaginationBox>\n    );\n};\n\nexport default Pagination;","\nimport ProductForm from 'components/ProductForm/ProductForm';\nimport Title from 'components/Title/Title';\nimport React from 'react'\n\nexport const EditProductModal = ({ props, onClose }) => {\n    return (\n        <div>\n            <Title>Edit data</Title>\n            <ProductForm onClose={onClose} product={props} />\n        </div>\n    )\n}\nexport default EditProductModal;","\nimport SuppliersForm from 'components/SuppliersForm/SuppliersForm';\nimport Title from 'components/Title/Title';\nimport React from 'react'\n\nexport const EditSuppliersModal = ({ props, onClose }) => {\n\n    return (\n        <div>\n            <Title>Edit data</Title>\n            <SuppliersForm onClose={onClose} supplier={props} />\n        </div>\n    )\n}\nexport default EditSuppliersModal;","import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport { useDispatch } from 'react-redux';\nimport { productDelete } from 'store/operations';\nimport Modal from 'components/Modal/Modal';\n\nimport EditProductModal from 'components/EditProductModal/EditProductModal';\nimport { useLocation } from 'react-router-dom';\nimport EditSuppliersModal from 'components/EditSuppliersModal/EditSuppliersModal';\n\nconst Box = styled.div`\ndisplay: flex;\ngap: 8px;\n`;\nconst ButtonEdit = styled.div`\nwidth: 32px;\nheight: 32px;\nborder-radius: 100%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ncolor: rgba(89, 177, 122, 0.50);\nborder: 1px solid rgba(89, 177, 122, 0.50);\n`;\nconst Button = styled.div`\nwidth: 82px;\nheight: 32px;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 500;\nborder-radius: 30px;\ndisplay: flex;\ngap: 6px;\njustify-content: center;\nalign-items: center;\ncolor: rgba(89, 177, 122, 0.50);\nborder: 1px solid rgba(89, 177, 122, 0.50);\n`;\nconst ButtonDelete = styled.div`\nwidth: 32px;\nheight: 32px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder-radius: 100%;\nborder: 1px solid rgba(232, 80, 80, 0.50);\n`;\nconst StyledSvg = styled.svg`\n\n`;\n\nconst ActionButtons = ({ props }) => {\n\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalOpen2, setModalOpen2] = useState(false);\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const handleClick = () => {\n        setModalOpen(true);\n    };\n    const handleOpen = () => {\n        setModalOpen2(true);\n    };\n    const deleteProduct = () => {\n        dispatch(productDelete(props._id));\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const closeModal2 = () => {\n        setModalOpen2(false);\n    };\n    const isSuppliersPage = location.pathname === \"/suppliers\"\n    return (\n        <> {isSuppliersPage ? (<Button onClick={handleOpen}>\n            <StyledSvg width={16} height={16} style={{ stroke: \"var(--green)\", strokeWidth: 1 }}>\n                <use href={`${sprite}#icon-edit`}></use>\n\n            </StyledSvg>  Edit\n        </Button>) :\n            <Box>\n                <ButtonEdit onClick={handleClick}>\n                    <StyledSvg width={16} height={16} style={{ stroke: \"var(--green)\", strokeWidth: 1 }}>\n                        <use href={`${sprite}#icon-edit`}></use>\n                    </StyledSvg>\n                </ButtonEdit>\n                <ButtonDelete onClick={deleteProduct}>\n                    <StyledSvg width={16} height={16} style={{ stroke: \"var(--red)\", strokeWidth: 1 }}>\n                        <use href={`${sprite}#icon-trash`}></use>\n                    </StyledSvg>\n                </ButtonDelete>\n            </Box>}\n            <Modal isOpen={modalOpen} onClose={closeModal}>\n                <EditProductModal onClose={closeModal} props={props} />\n            </Modal>\n            <Modal isOpen={modalOpen2} onClose={closeModal2}>\n                <EditSuppliersModal onClose={closeModal2} props={props} />\n            </Modal>\n        </>\n    );\n};\n\nexport default ActionButtons;\n","import { BoxName, Name } from \"components/DynamicTable/DynamicTable\";\nimport { getBgColorByStatus, getColorByStatus } from \"./colorType\";\nimport { Text } from \"components/OperationTablet/OperationTablet\";\nimport ActionButtons from \"components/ActionButtons/ActionButtons\";\n\nexport const getRowValue = (row, column) => {\n  switch (column) {\n    case \"User Info\":\n      return (\n        <BoxName>\n          <img\n            className=\"avatar\"\n            src={row.image || row.photo}\n            alt=\"Avatar\"\n            width={36}\n            height={36}\n          />\n          <Name>{row.name}</Name>\n        </BoxName>\n      );\n    case \"Name\":\n      return (\n        <BoxName>\n          <img\n            className=\"avatar\"\n            src={row.image || row.photo}\n            alt=\"Avatar\"\n            width={36}\n            height={36}\n          />\n          <Name>{row.name}</Name>\n        </BoxName>\n      );\n    case \"Address\":\n      return row.address;\n    case \"Products\":\n      return row.products;\n    case \"Order date\":\n      return row.order_date;\n    case \"Register date\":\n      return row.register_date;\n    case \"Delivery date\":\n      return row.date;\n    case \"Price\":\n      return row.price;\n    case \"Company\":\n      return row.suppliers;\n    case \"Product Info\":\n      return row.name;\n    case \"Suppliers Info\":\n      return row.name;\n    case \"Status\":\n      return (\n        <Text\n          color={getColorByStatus(row.status)}\n          bgcolor={getBgColorByStatus(row.status)}\n        >\n          {row.status}\n        </Text>\n      );\n    case \"Action\":\n      return <ActionButtons props={row} />;\n    default:\n      return row[column.toLowerCase()];\n  }\n};\n","\nimport Pagination from 'components/Pagination/Pagination';\nimport { getRowValue } from 'helpers/getRowValue';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const TableContainer = styled.div`\n\n`;\nexport const TableTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n display: block;\n\n   border-radius: 8px 8px 0 0;\n position: sticky;\n  top: 0;\n  padding: 14px;\n  width: 100%;\n  background: #E7F1ED;\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Table = styled.table`\n  min-width: 280px; \n  width:100%;\n  border-collapse: collapse;\n \n  th, td {\n    border: 1px solid #ddd;\n    padding: 14px 10px;\n    text-align: left;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 14px;\n    border-top: none; \n    border-left: none;\n    min-width: 80px; \n    @media (min-width: 768px) {\n    padding: 20px;\n    font-size: 16px;\n     min-width: 150px; \n  }\n  }\n\n  tr:last-child td{\n    border-bottom: none; \n  }\n  tr:last-child {\n     border-radius: 0 0 8px 8px;\n  }\n  th {\n    border-top: none;\n    color: rgba(29, 30, 33, 0.40);\n  }\n\n  th:last-child {\n   border-right: none;\n \n  }\n\n  th:first-child {\n    \n  }\n\n  td:last-child {\n     border-right: none;\n  \n  }\n\n  td:first-child {\nborder-radius: 0 0 8px 8px;\n  }\n`;\n\nexport const Box = styled.div`\nheight: 100%;\n padding-bottom:20px;\n\noverflow-x: auto;\n &::-webkit-scrollbar {\n    padding-bottom: 15px;\n    height: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #f1f1f1; \n  }\n\n  &::-webkit-scrollbar-thumb {\n  border-radius: 14px;\nbackground: #E6E6E6;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: #555; \n  }\n\n \n`;\n\nexport const BoxName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  gap: 8px;\n     @media (min-width: 768px) {\n   flex-direction: row;\n   align-items: center;\n  }\n`;\n\nexport const Name = styled.h4`\n  margin: 0;\n`;\n\nexport const Container = styled.div`\n\n border-radius: 0 0 8px 8px;\n border: 1px solid rgba(29, 30, 33, 0.10);\n  background: #FFF;\noverflow-x: hidden;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n\n`;\n\nconst DynamicTable = ({ columns, data, title }) => {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  const handlePageClick = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <Box>\n\n\n\n      <Table>\n        <TableTitle>{title}</TableTitle>\n        <Container>\n          <thead>\n            <tr>\n              {columns.map((column, index) => (\n                <th key={index}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {currentItems.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {columns.map((column, colIndex) => (\n                  <td key={colIndex}>\n                    {getRowValue(row, column)}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody></Container>\n      </Table>\n\n\n\n\n\n      <Pagination totalPages={totalPages} handlePageClick={handlePageClick} currentPage={currentPage} />\n\n    </Box>\n  );\n};\n\nexport default DynamicTable;\n","\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport styled from 'styled-components';\nconst StyledInput = styled.input`\n\noutline: none;\n\nborder-radius: 60px;\nborder: 1px solid rgba(29, 30, 33, 0.10);\nheight: 44px;\nbackground: #FFF;\nwidth:100%;\npadding: 13px 18px;\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\n@media (min-width: 768px){\n    margin-bottom: 0;\n}\n    `;\nconst ErrorMessage = styled.div`\nposition: absolute;\n  height: 8px;\n  color: var(--red);\n  font-size: 10px;\n  margin: 2px 0 4px auto;\n  text-align: right;\n  right: 10px;\n  top: 5px;\n`;\n\nconst InputField = ({ name, type, placeholder }) => {\n    const { register, formState: { errors } } = useFormContext();\n\n    if (errors[name]) {\n        if (/must be a `number` type/i.test(errors[name].message)) {\n            errors[name].message = `${name.charAt(0).toUpperCase() + name.slice(1)} must be a number`;\n        }\n    }\n\n    return (\n        <div style={{ position: \"relative\", width: \"100%\" }}>\n            <label htmlFor={name}></label>\n            {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\n            <StyledInput\n                id={name}\n                type={type}\n                placeholder={placeholder}\n                {...register(name)}\n            />\n        </div>\n    );\n};\n\nexport default InputField;","import React, { useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport ReactDOM from 'react-dom';\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color:rgba(29, 30, 33, 0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContainer = styled.div`\nposition: relative;\n  background-color: white;\n  padding:  20px 20px;\n  border-radius: 8px;\n \n  width: 335px;\n  width: 295px;\n    @media(min-width: 375px){\n        padding:  40px 20px; \n    }\n     @media(min-width: 768px) {\n   width: 536px;\n     padding:  40px; \n}\n`;\n\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  top:0;\n  padding: 14px;\n`;\n\nconst ModalContent = styled.div`\n  \n`;\n\nconst Modal = ({ isOpen, onClose, children }) => {\n    const handleCloseModal = useCallback(() => {\n        onClose(false);\n    }, [onClose]);\n\n    const handleBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n            handleCloseModal();\n        }\n    };\n\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                handleCloseModal();\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleCloseModal]);\n    return isOpen ? ReactDOM.createPortal(\n        <ModalBackground onClick={handleBackdropClick}>\n            <ModalContainer>\n\n\n                <CloseButton onClick={handleCloseModal}> <svg width={24} height={24} style={{ stroke: \"var(--main-black)\", strokeWidth: 1 }}>\n                    <use href={`${sprite}#icon-x`}></use>\n                </svg></CloseButton>\n\n                <ModalContent>\n                    {children}\n                </ModalContent>\n            </ModalContainer>\n        </ModalBackground >, document.getElementById('modal-root')\n    ) : null;\n};\n\nexport default Modal;\n","import { Table } from 'components/DynamicTable/DynamicTable';\nimport { getBgColorByType, getColorByType } from 'helpers/colorType';\nimport React from 'react'\nimport styled from 'styled-components';\n\n\nexport const Text = styled.div`\n  \n     color: ${props => props.color};\n     padding: 4px 10px;\n    background-color:  ${props => props.bgcolor};\n    border-radius: 40px;\n    text-align: center;\n      ${props => props.$isError && `\n            text-decoration: line-through;\n        `}\n    `;\nexport const Title = styled.h3`\n font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n display: block;\n\n   border-radius: 8px 8px 0 0;\n position: sticky;\n  top: 0;\n  padding: 14px;\n  width: 100%;\n  background: #E7F1ED;`;\nconst Container = styled.div`\n\n border-radius: 0 0 8px 8px;\n border: 1px solid rgba(29, 30, 33, 0.10);\n  background: #FFF;\n\n\n \n`;\nconst OperationTablet = ({ columns, data, title }) => {\n\n\n\n    return (\n        <>\n\n\n            <Table><Title>{title}</Title>\n                <Container>\n                    <thead>\n                        <tr>\n                            {columns.map((column, index) => (\n                                <th style={{ borderLeft: \"none\", borderRight: \"none\" }} key={index}>{column}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((row, rowIndex) => (\n                            <tr key={rowIndex}>\n                                <td style={{ borderLeft: \"none\", borderRight: \"none\" }}><Text color={getColorByType(row.type)} bgcolor={getBgColorByType(row.type)}>{row.type}</Text></td>\n                                <td style={{ borderLeft: \"none\", borderRight: \"none\" }}>{row.name}</td>\n                                <td style={{ borderLeft: \"none\", borderRight: \"none\" }}><Text color={getColorByType(row.type)} $isError={row.type === 'Error'}>{row.amount}</Text></td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Container >\n            </Table>\n        </>\n    );\n};\n\n\n\nexport default OperationTablet;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport styled from 'styled-components';\nimport { addProduct, editProduct } from 'store/operations';\nimport InputField from 'components/InputField/InputField';\nimport SelectField from 'components/SelectField/SelectField';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { productAddSchema, productEditSchema } from 'schema/schema.js';\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n   @media (min-width: 768px){\n     margin-top: 36px;}\n`;\n\nconst Box = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 40px;\n  @media (min-width: 768px){\n    width: 274px;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n   gap: 14px;\n\n`;\nexport const EmptyBox = styled.div`\ndisplay: none;\n@media (min-width: 768px){\n    display: block;\n    width: 100%;}\n`;\nexport const RowBox = styled.div`\n  display: flex;\n  flex-direction: column;\n gap: 14px;\n\n @media (min-width: 768px){\n    flex-direction: row;\n    gap: 8px;\n    \n }\n\n`;\nconst ProductForm = ({ onClose, product }) => {\n    const dispatch = useDispatch();\n    const methods = useForm({\n        resolver: yupResolver(product ? productEditSchema : productAddSchema),\n        defaultValues: product || {},\n    });\n    const { handleSubmit, reset, setValue } = methods;\n\n    useEffect(() => {\n        if (product) {\n            for (const [key, value] of Object.entries(product)) {\n                setValue(key, value);\n            }\n        }\n    }, [product, setValue]);\n\n    const handleAddOrUpdateProduct = (productData) => {\n\n        if (product) {\n            const { _id, id, ...dataWithoutId } = productData;\n            console.log(dataWithoutId)\n            dispatch(editProduct({ dataWithoutId, _id }));\n\n        } else {\n\n            dispatch(addProduct(productData));\n        }\n        onClose(false);\n        reset();\n    };\n\n    const handleCancel = () => {\n        onClose();\n    };\n\n    const categoryOptions = [\n        { value: 'Medicine', label: 'Medicine' },\n        { value: 'Head', label: 'Head' },\n        { value: 'Heart', label: 'Heart' },\n        { value: 'Hand', label: 'Hand' },\n        { value: 'Dental Care', label: 'Dental Care' },\n        { value: 'Skin Care', label: 'Skin Care' },\n        { value: 'Eye Care', label: 'Eye Care' },\n        { value: 'Vitamins & Supplements', label: 'Vitamins & Supplements' },\n        { value: 'Orthopedic Products', label: 'Orthopedic Products' },\n        { value: 'Baby Care', label: 'Baby Care' },\n        { value: 'Leg', label: 'Leg' },\n    ];\n\n    return (\n        <FormProvider {...methods}>\n            <FormContainer onSubmit={handleSubmit(handleAddOrUpdateProduct)}>\n                <Container>\n                    <RowBox>\n                        <InputField style={{ width: \"50%\" }} name=\"name\" type=\"text\" placeholder=\"Product Info\" />\n                        <SelectField name=\"category\" options={categoryOptions} /></RowBox>\n                    <RowBox>\n                        <InputField name=\"stock\" type=\"number\" placeholder=\"Stock\" />\n                        <InputField name=\"suppliers\" type=\"text\" placeholder=\"Suppliers\" /></RowBox>\n                    <RowBox>\n                        <InputField name=\"price\" type=\"text\" placeholder=\"Price\" />\n                        <EmptyBox></EmptyBox>\n                    </RowBox>\n                    <Box>\n                        <CustomButton type=\"submit\">{product ? 'Save' : 'Add'}</CustomButton>\n                        <CustomButton type=\"button\" $cancel=\"true\" onClick={handleCancel}>\n                            Cancel\n                        </CustomButton>\n                    </Box></Container>\n            </FormContainer>\n        </FormProvider>\n    );\n};\n\nexport default ProductForm;\n","import DynamicTable from 'components/DynamicTable/DynamicTable'\nimport React from 'react'\nimport styled from 'styled-components';\n\n\nexport const Container = styled.div`\nwidth: 100%;\nmargin-top: 20px;\npadding-bottom: 20px;\n @media (min-width: 768px) {\nmargin-top: 20px;\npadding-bottom: 0;\n }\n \n\n`;\nconst RecentCustomers = ({ props }) => {\n\n\n    const filteredData = props.map(({ image, name, email, spent }) => ({ image, name, email, spent }));\n    const columns = [\"Name\", \"Email\", \"Spent\"];\n    return (\n        <Container>\n\n            <DynamicTable columns={columns} data={filteredData} title={\"Recent Customers\"} />\n        </Container>\n    )\n}\nexport default RecentCustomers;","import React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport styled from 'styled-components';\n\nconst customStyles = {\n    control: (provided) => ({\n        ...provided,\n        backgroundColor: '#FFF',\n        boxShadow: 'none',\n        width: '100%',\n        borderRadius: \"60px\",\n        fontSize: \"12px\",\n        border: \"1px solid rgba(29, 30, 33, 0.10)\",\n        height: \"44px\",\n        color: \"black\",\n        outline: \"none\",\n        '&:hover': {\n            borderColor: '#aaa',\n        },\n    }),\n    valueContainer: (provided) => ({\n        ...provided,\n        paddingLeft: \"14px\",\n    }),\n    placeholder: (base) => ({\n        ...base,\n\n        color: 'rgba(0, 0, 0, 0.5)',\n    }),\n    input: (provided) => ({\n        ...provided,\n        paddingLeft: \"6px\",\n    }),\n    singleValue: (provided) => ({\n        ...provided,\n\n        color: \"var(--primary-color)\",\n        textTransform: 'capitalize',\n        fontSize: \"12px\",\n    }),\n    indicatorSeparator: (provided) => ({\n        ...provided,\n        display: 'none',\n    }),\n    dropdownIndicator: (provided) => ({\n        ...provided,\n        color: \"black\",\n        paddingRight: \"14px\",\n    }),\n    menu: (provided) => ({\n        ...provided,\n        borderRadius: \"15px\",\n    }),\n    menuList: (provided) => ({\n        ...provided,\n        borderRadius: \"15px\",\n        maxHeight: \"114px\",\n        backgroundColor: \"var(--green)\",\n        color: \"white\",\n        padding: \"13px 10px 13px 18px \",\n        \"::-webkit-scrollbar\": {\n            width: '8px',\n        },\n        \"::-webkit-scrollbar-thumb\": {\n            background: 'rgba(0,0,0,0.2)',\n            borderRadius: '10px',\n        },\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        padding: '3px 0',\n        color: state.isFocused ? 'white' : \"rgba(255, 255, 255, 0.50)\",\n        backgroundColor: state.isFocused ? 'transparent' : 'transparent',\n        fontSize: \"12px\",\n    }),\n};\n\nconst ErrorMessage = styled.p`\nposition: absolute;\n  height: 8px;\n  color: var(--red);\n  font-size: 10px;\n  margin: 2px 0 4px auto;\n  text-align: right;\n  right: 10px;\n  top: 5px;\n  z-index: 3;\n`;\n\nconst SelectField = ({ name, options }) => {\n    const { control, formState: { errors } } = useFormContext();\n\n    return (\n        <div style={{ position: \"relative\", width: \"100%\" }}>\n            <label htmlFor={name}></label>\n            {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\n            <Controller\n                name={name}\n                control={control}\n                render={({ field }) => (\n                    <Select\n                        {...field}\n                        options={options}\n                        styles={customStyles}\n                        placeholder=\"Category\"\n                        onChange={(selectedOption) => field.onChange(selectedOption.value)}\n                        value={options.find(option => option.value === field.value)}\n                    />\n                )}\n            />\n        </div>\n    );\n};\n\nexport default SelectField;","import React, { useRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { useFormContext } from 'react-hook-form';\nimport { format } from 'date-fns';\nimport { registerLocale } from 'react-datepicker';\nimport enGB from 'date-fns/locale/en-GB';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nregisterLocale('en-GB', enGB);\n\nconst CustomTextField = styled.input`\n  outline: none;\n  padding: 0 10px;\n  border-radius: 60px;\n  border: none;\n  background: #FFF;\n  width: 100%;\n  padding: 13px 18px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n`;\n\nconst CustomBox = styled.div`\n  position: relative;\n  border-radius: 60px;\n  width: 100%;\n  border: 1px solid rgba(29, 30, 33, 0.10);\n  height: 44px;\n  svg {\n    position: absolute;\n    right: 12px;\n    top: 12px;\n    width: 18px;\n    height: 18px;\n    fill: white;\n    stroke: black;\n    cursor: pointer;\n  }\n`;\n\nconst ErrorMessage = styled.div`\nposition: absolute;\n  height: 8px;\n  color: var(--red);\n  font-size: 10px;\n  margin: 2px 0 4px auto;\n  text-align: right;\n  right: 10px;\n  top: 5px;\n`;\nconst DeliveryPicker = ({ name }) => {\n    const datePickerRef = useRef(null);\n    const { setValue, register, formState: { errors }, watch } = useFormContext();\n\n    const handleIconClick = () => {\n        if (datePickerRef.current) {\n            datePickerRef.current.setOpen(true);\n        }\n    };\n\n    const handleDateChange = (date) => {\n        const formattedDate = format(date, 'MMMM d, yyyy');\n        setValue(name, formattedDate);\n    };\n\n    const selectedDate = watch(name);\n\n    return (\n        <CustomBox>\n            <DatePicker\n                selected={selectedDate ? new Date(selectedDate) : null}\n                onChange={handleDateChange}\n                customInput={\n                    <CustomTextField\n                        placeholder=\"Delivery date\"\n                        {...register(name)}\n                    />\n                }\n                locale=\"en-GB\"\n                placeholderText=\"Delivery date\"\n                maxDate={new Date()}\n                dateFormat=\"MMMM d, yyyy\"\n                ref={datePickerRef}\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n            />\n            <svg onClick={handleIconClick}>\n                <use href={`${sprite}#icon-calendar`} />\n            </svg>\n            {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\n        </CustomBox>\n    );\n};\n\nexport default DeliveryPicker;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport styled from 'styled-components';\nimport { addSuppliers, editSuppliers, } from 'store/operations';\nimport InputField from 'components/InputField/InputField';\nimport SelectField from 'components/SelectField/SelectField';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { supplierAddSchema, supplierEditSchema } from 'schema/schema.js';\nimport DeliveryPicker from 'components/DeliveryPicker/DeliveryPiccker';\nimport { Container, RowBox } from 'components/ProductForm/ProductForm';\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 40px;\n    @media (min-width: 768px){\n    width: 274px;\n  }\n`;\n\nconst SuppliersForm = ({ onClose, supplier }) => {\n\n    const dispatch = useDispatch();\n    const methods = useForm({\n        resolver: yupResolver(supplier ? supplierEditSchema : supplierAddSchema),\n        defaultValues: supplier || {},\n    });\n    const { handleSubmit, reset, setValue } = methods;\n\n    useEffect(() => {\n        if (supplier) {\n            for (const [key, value] of Object.entries(supplier)) {\n                setValue(key, value);\n            }\n        }\n    }, [supplier, setValue]);\n\n    const handleAddOrUpdate = (productData) => {\n\n        if (supplier) {\n            const { _id, id, ...dataWithoutId } = productData;\n            console.log(dataWithoutId)\n            dispatch(editSuppliers({ dataWithoutId, _id }));\n\n        } else {\n            console.log(productData)\n            dispatch(addSuppliers(productData));\n        }\n        onClose(false);\n        reset();\n    };\n\n    const handleCancel = () => {\n        onClose();\n    };\n\n    const categoryOptions = [\n        {\n            value: 'Active', label: 'Active'\n        },\n        { value: 'Deactive', label: 'Deactive' },\n\n    ];\n\n    return (\n        <FormProvider {...methods}>\n            <FormContainer onSubmit={handleSubmit(handleAddOrUpdate)}>\n                <Container>\n                    <RowBox>\n                        <InputField name=\"name\" type=\"text\" placeholder=\"Suppliers Info\" />\n\n                        <InputField name=\"address\" type=\"text\" placeholder=\"Address\" />\n                    </RowBox>\n                    <RowBox>\n                        <InputField name=\"suppliers\" type=\"text\" placeholder=\"Company\" />\n                        <DeliveryPicker name=\"date\" />\n                    </RowBox><RowBox>\n                        <InputField name=\"amount\" type=\"text\" placeholder=\"Amount\" />\n                        <SelectField name=\"status\" options={categoryOptions} />\n                    </RowBox>\n                    <Box>\n                        <CustomButton type=\"submit\">{supplier ? 'Save' : 'Add'}</CustomButton>\n                        <CustomButton type=\"button\" $cancel=\"true\" onClick={handleCancel}>\n                            Cancel\n                        </CustomButton>\n                    </Box></Container>\n            </FormContainer>\n        </FormProvider>\n    );\n};\n\nexport default SuppliersForm;\n","export const getColorByType = (type) => {\n  switch (type) {\n    case \"Income\":\n      return \"var(--green)\";\n    case \"Expense\":\n      return \"var(--red)\";\n    case \"Error\":\n      return \"var(--main-black)\";\n    default:\n      return \"inherit\";\n  }\n};\nexport const getBgColorByType = (type) => {\n  switch (type) {\n    case \"Income\":\n      return \"rgba(89, 177, 122, 0.10)\";\n    case \"Expense\":\n      return \"rgba(232, 80, 80, 0.10)\";\n    case \"Error\":\n      return \"rgba(29, 30, 33, 0.10)\";\n    default:\n      return \"inherit\";\n  }\n};\nexport const getColorByStatus = (status) => {\n  switch (status) {\n    case \"Completed\":\n      return \"var(--green)\";\n    case \"Active\":\n      return \"var(--green)\";\n    case \"Cancelled\":\n      return \"var(--red)\";\n    case \"Deactive\":\n      return \"var(--red)\";\n    case \"Confirmed\":\n      return \" #8059E4\";\n    case \"Pending\":\n      return \" #F79042\";\n    case \"Processing\":\n      return \" #70A6E8\";\n    case \"Shipped\":\n      return \"#ffd600\";\n    case \"Delivered\":\n      return \"var(--main-black)\";\n    default:\n      return \"inherit\";\n  }\n};\nexport const getBgColorByStatus = (status) => {\n  switch (status) {\n    case \"Completed\":\n      return \"rgba(89, 177, 122, 0.10)\";\n    case \"Active\":\n      return \"rgba(89, 177, 122, 0.10)\";\n    case \"Cancelled\":\n      return \"rgba(232, 80, 80, 0.10)\";\n    case \"Deactive\":\n      return \"rgba(232, 80, 80, 0.10)\";\n    case \"Confirmed\":\n      return \"rgba(128, 89, 228, 0.10)\";\n    case \"Pending\":\n      return \"rgba(247, 144, 66, 0.10)\";\n    case \"Processing\":\n      return \"rgba(112, 166, 232, 0.10)\";\n    case \"Shipped\":\n      return \"rgba(255, 214, 0, 0.1)\";\n    case \"Delivered\":\n      return \"rgba(29, 30, 33, 0.10)\";\n    default:\n      return \"inherit\";\n  }\n};\n","import * as yup from \"yup\";\r\n\r\nexport const authSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .trim()\r\n    .email()\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^[a-zA-Z0-9.-_]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/,\r\n      \"Invalid email format\"\r\n    ),\r\n  password: yup.string().required(),\r\n});\r\n\r\nexport const productAddSchema = yup.object().shape({\r\n  name: yup.string().required(\"Product Info is required\"),\r\n  category: yup.string().required(\"Category is required\"),\r\n  stock: yup\r\n    .string()\r\n\r\n    .required(\"Stock is required\"),\r\n\r\n  suppliers: yup.string().required(\"Suppliers is required\"),\r\n  price: yup\r\n    .string()\r\n\r\n    .required(\"Price is required\"),\r\n});\r\nexport const productEditSchema = yup.object().shape({\r\n  name: yup.string(),\r\n  category: yup.string(),\r\n  stock: yup.string(),\r\n  suppliers: yup.string(),\r\n  price: yup.string(),\r\n});\r\nconst dateRegEx =\r\n  /^(January|February|March|April|May|June|July|August|September|October|November|December) \\d{1,2}, \\d{4}$/;\r\n\r\nexport const supplierAddSchema = yup.object().shape({\r\n  name: yup.string().required(\"Name is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n  suppliers: yup.string().required(\"Company is required\"),\r\n  date: yup\r\n    .string()\r\n    .matches(dateRegEx, \"Date must be in the format: August 1, 2023\")\r\n    .required(\"Date is required\"),\r\n  amount: yup\r\n    .string()\r\n\r\n    .required(\"Amount is required\"),\r\n  status: yup\r\n    .string()\r\n    .oneOf([\"Active\", \"Deactive\"], \"Status must be either Active or Deactive\")\r\n    .required(\"Status is required\"),\r\n});\r\n\r\nexport const supplierEditSchema = yup.object().shape({\r\n  name: yup.string().required(\"Name is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n  suppliers: yup.string().required(\"Company is required\"),\r\n  date: yup\r\n    .string()\r\n    .matches(dateRegEx, \"Date must be in the format: August 1, 2023\")\r\n    .required(\"Date is required\"),\r\n  amount: yup\r\n    .string()\r\n\r\n    .required(\"Amount is required\"),\r\n  status: yup\r\n    .string()\r\n    .oneOf([\"Active\", \"Deactive\"], \"Status must be either Active or Deactive\")\r\n    .required(\"Status is required\"),\r\n});\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","_ref","$cancel","_ref2","cancel","_ref3","_ref4","_ref5","_ref6","props","_jsx","PaginationBox","div","PageButton","button","_templateObject2","active","totalPages","currentPage","handlePageClick","className","children","Array","map","_","index","onClick","onClose","_jsxs","Title","ProductForm","product","SuppliersForm","supplier","Box","ButtonEdit","Button","_templateObject3","ButtonDelete","_templateObject4","StyledSvg","svg","_templateObject5","modalOpen","setModalOpen","useState","modalOpen2","setModalOpen2","location","useLocation","dispatch","useDispatch","closeModal","closeModal2","isSuppliersPage","pathname","_Fragment","handleOpen","width","height","style","stroke","strokeWidth","href","concat","sprite","handleClick","deleteProduct","productDelete","_id","Modal","isOpen","EditProductModal","EditSuppliersModal","getRowValue","row","column","BoxName","src","image","photo","alt","Name","name","address","products","order_date","register_date","date","price","suppliers","Text","color","getColorByStatus","status","bgcolor","getBgColorByStatus","ActionButtons","toLowerCase","TableTitle","h3","Table","table","h4","_templateObject6","Container","_templateObject7","columns","data","title","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","Math","ceil","length","rowIndex","colIndex","Pagination","pageNumber","StyledInput","input","ErrorMessage","type","placeholder","register","formState","errors","useFormContext","test","message","charAt","toUpperCase","position","htmlFor","id","ModalBackground","ModalContainer","CloseButton","ModalContent","handleCloseModal","useCallback","useEffect","handleKeyDown","e","code","document","addEventListener","removeEventListener","ReactDOM","event","currentTarget","target","getElementById","$isError","borderLeft","borderRight","getColorByType","getBgColorByType","amount","FormContainer","form","EmptyBox","RowBox","methods","useForm","resolver","yupResolver","productEditSchema","productAddSchema","defaultValues","handleSubmit","reset","setValue","key","value","Object","entries","FormProvider","onSubmit","productData","dataWithoutId","console","log","editProduct","addProduct","InputField","SelectField","options","label","CustomButton","handleCancel","filteredData","email","spent","DynamicTable","customStyles","control","provided","backgroundColor","boxShadow","borderRadius","fontSize","border","outline","borderColor","valueContainer","paddingLeft","base","singleValue","textTransform","indicatorSeparator","display","dropdownIndicator","paddingRight","menu","menuList","maxHeight","padding","background","option","state","isFocused","p","Controller","render","field","Select","styles","onChange","selectedOption","find","registerLocale","enGB","CustomTextField","CustomBox","datePickerRef","useRef","watch","selectedDate","DatePicker","selected","Date","formattedDate","format","customInput","locale","placeholderText","maxDate","dateFormat","ref","showMonthDropdown","showYearDropdown","dropdownMode","handleIconClick","current","setOpen","supplierEditSchema","supplierAddSchema","editSuppliers","addSuppliers","DeliveryPicker","authSchema","yup","trim","required","matches","password","shape","category","stock","dateRegEx","oneOf"],"sourceRoot":""}