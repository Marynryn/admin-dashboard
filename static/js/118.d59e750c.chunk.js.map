{"version":3,"file":"static/js/118.d59e750c.chunk.js","mappings":"2LAIA,MAaA,EAbmBA,IAAgB,IAAf,MAAEC,GAAOD,EAKzB,OACIE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,UAAW,QAASC,UAE9BH,EAAAA,EAAAA,KAACI,EAAAA,GAAe,CAACC,QANT,CAAC,QAAS,GAAI,IAMaC,KAAMP,EAAOQ,MAAO,qBACrD,E,oDCRd,MAAMC,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4PAatBC,EAAQJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qJAwBvB,EAfuBd,IAA4B,IAA3B,KAAEkB,EAAI,MAAEC,EAAK,KAAEC,GAAMpB,EAEzC,OACIqB,EAAAA,EAAAA,MAACX,EAAS,CAAAL,SAAA,EACNgB,EAAAA,EAAAA,MAAA,OAAKlB,MAAO,CAAEmB,QAAS,OAAQC,IAAK,OAAQlB,SAAA,EACxCH,EAAAA,EAAAA,KAAA,OAAKsB,MAAO,GAAIC,OAAQ,GAAItB,MAAO,CAAEuB,OAAQ,oBAAqBC,KAAM,QAASC,YAAa,GAAIvB,UAC9FH,EAAAA,EAAAA,KAAA,OAAK2B,KAAI,GAAAC,OAAKC,EAAAA,GAAMD,OAAGV,QAE3BlB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,CAAA3B,SAAEa,QAEfhB,EAAAA,EAAAA,KAACa,EAAK,CAAAV,UCrCW4B,EDqCId,ECpCxBc,EAAIC,WAAWC,QAAQ,wBAAyB,WAD5BF,KDuCT,EEfpB,EApBmBjC,IAAgB,IAAf,MAAEC,GAAOD,EAGzB,MAAM,cAAEoC,EAAa,eAAEC,EAAc,eAAEC,GAAmBrC,EAEpDsC,EAAM,CACR,CAAErB,KAAM,eAAgBC,MAAOiB,EAAehB,KAAM,cACpD,CAAEF,KAAM,gBAAiBC,MAAOkB,EAAgBjB,KAAM,cACtD,CAAEF,KAAM,gBAAiBC,MAAOmB,EAAgBlB,KAAM,gBAG1D,OACIlB,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEmB,QAAS,OAAQkB,SAAU,OAAQjB,IAAK,OAAQnB,UAAW,EAAGqC,aAAc,QAASpC,SAAEkC,EAAIG,KAAI,CAACC,EAAIC,KAAUvB,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,CAAgB,KAACH,EAAAA,EAAAA,KAAC2C,EAAc,IAAKF,MAA5BC,QAIlI,E,mCCZd,MAAMlC,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2DAqB5B,EAhBkBgC,KACd,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAI9B,OAHAC,EAAAA,EAAAA,YAAU,KACNL,GAASM,EAAAA,EAAAA,MAAe,GACzB,CAACN,IACqB,IAArBE,EAAUK,OAAqB,MAG/BjC,EAAAA,EAAAA,MAACX,EAAS,CAAAL,SAAA,EACNH,EAAAA,EAAAA,KAACqD,EAAU,CAACtD,MAAOgD,KACnB/C,EAAAA,EAAAA,KAACsD,EAAAA,EAAe,CAACvD,MAAOgD,EAAUQ,mBAClCvD,EAAAA,EAAAA,KAACwD,EAAU,CAACzD,MAAOgD,EAAUU,eACrB,C","sources":["components/Operations/Operations.jsx","components/StatisticsItem/StatisticsItem.jsx","helpers/formatNumber.js","components/Statistics/Statistics.jsx","pages/Dashboard/Dashboard.jsx"],"sourcesContent":["\nimport OperationTablet from 'components/OperationTablet/OperationTablet';\nimport React from 'react'\n\nconst Operations = ({ props }) => {\n\n    const columns = [\"Today\", \"\", \"\"];\n\n\n    return (\n        <div style={{ marginTop: \"20px\" }}>\n\n            <OperationTablet columns={columns} data={props} title={\"Income/Expenses\"} />\n        </div>\n    )\n\n}\nexport default Operations;","import React from 'react'\nimport styled from 'styled-components'\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport SubTitle from 'components/SubTitle/SubTitle';\nimport { formatNumber } from 'helpers/formatNumber';\nconst Container = styled.div`\n    width: 130px;\nheight: 98px;\npadding: 14px;\nborder-radius: 8px;\nborder: 1px solid rgba(29, 30, 33, 0.10);\n\nbackground: #FFF;\n @media(min-width: 375px) { width: 155px;}\n  @media(min-width: 768px) { width: 220px;\n  height: 108px;}\n`;\n\nconst Value = styled.h3`\n    font-size: 16px;\n    font-weight: 600;\n \n    margin-top: 32px;\n    @media(min-width: 768px) {\n           font-size: 24px;\n    }\n`\nconst StatisticsItem = ({ name, value, icon }) => {\n\n    return (\n        <Container>\n            <div style={{ display: \"flex\", gap: \"8px\" }}>\n                <svg width={18} height={18} style={{ stroke: \"var(--main-black)\", fill: \"white\", strokeWidth: 1 }}>\n                    <use href={`${sprite}${icon}`}></use>\n                </svg>\n                <SubTitle>{name}</SubTitle>\n            </div>\n            <Value>{formatNumber(value)}</Value>\n\n        </Container>\n    )\n}\nexport default StatisticsItem;","export const formatNumber = (num) => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n","import StatisticsItem from 'components/StatisticsItem/StatisticsItem';\nimport React from 'react'\n\n\nconst Statistics = ({ props }) => {\n\n\n    const { totalProducts, totalCustomers, totalSuppliers } = props;\n\n    const arr = [\n        { name: \"All Products\", value: totalProducts, icon: \"#icon-cash\" },\n        { name: \"All Customers\", value: totalCustomers, icon: \"#icon-cash\" },\n        { name: \"All Suppliers\", value: totalSuppliers, icon: \"#icon-users\" }\n    ];\n\n    return (\n        <div>\n            <ul style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\", marginTop: 0, marginBottom: \"40px\" }}>{arr.map((el, index) => <li key={index}> <StatisticsItem {...el} /></li>)}\n\n\n            </ul>\n        </div>\n    )\n}\nexport default Statistics;","import Operations from 'components/Operations/Operations';\nimport RecentCustomers from 'components/RecentCustomers/RecentCustomers';\nimport Statistics from 'components/Statistics/Statistics';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDashboard } from 'store/operations';\nimport { selectGetDashboard } from 'store/selectors';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    padding-top: 20px;\n    width: 100%;\n     \n`;\nconst Dashboard = () => {\n    const dispatch = useDispatch();\n    const dashboard = useSelector(selectGetDashboard);\n    useEffect(() => {\n        dispatch(getDashboard());\n    }, [dispatch])\n    if (dashboard.length === 0) return null;\n\n    return (\n        <Container>\n            <Statistics props={dashboard} />\n            <RecentCustomers props={dashboard.recentCustomers} />\n            <Operations props={dashboard.operations} />\n        </Container>\n    )\n}\nexport default Dashboard;"],"names":["_ref","props","_jsx","style","marginTop","children","OperationTablet","columns","data","title","Container","styled","div","_templateObject","_taggedTemplateLiteral","Value","h3","_templateObject2","name","value","icon","_jsxs","display","gap","width","height","stroke","fill","strokeWidth","href","concat","sprite","SubTitle","num","toString","replace","totalProducts","totalCustomers","totalSuppliers","arr","flexWrap","marginBottom","map","el","index","StatisticsItem","Dashboard","dispatch","useDispatch","dashboard","useSelector","selectGetDashboard","useEffect","getDashboard","length","Statistics","RecentCustomers","recentCustomers","Operations","operations"],"sourceRoot":""}